services:
  api: &api
    build:
      context: .
      dockerfile: ./docker/dev/Dockerfile
    volumes:
      - .:/app
      - ./finnect/staticfiles:/app/finnect/staticfiles
    expose:
      - "8080"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      mailpit:
        condition: service_started
      redis:
        condition: service_started
      rabbitmq:
        condition: service_started
    command: /start.sh
  
  postgres:
    image: postgres:latest
    env_file:
      - .env
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 2s
      timeout: 5s
      retries: 15
  
  mailpit:
    image: docker.io/axllent/mailpit
    ports:
      - "8025:8025"
      - "1025:1025"
    volumes:
      - mailpit_data:/data
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATA_FILE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
  

  redis:
    image: redis:latest
    command: redis-server --appendonly yes
    ports:
      - "6378:6379"
    
  rabbitmq:
    image: rabbitmq:latest
    ports:
      - "5674:5672"
      - "15674:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq

  celeryworker:
    <<: *api
    command: /start_celeryworker.sh
  
  flower:
    <<: *api
    command: /start_flower.sh
    ports:
      - "5554:5555"
    volumes:
      - flower_db:/app/flower_db

  celerybeat:
    <<: *api
    command: /start_celerybeat.sh

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./docker/dev/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./finnect/staticfiles:/app/finnect/staticfiles
      - logs_store:/var/log/nginx
    depends_on:
      - api

volumes:
  postgres_data:
  mailpit_data:
  logs_store:
  rabbitmq_data:
  rabbitmq_logs:
  flower_db: